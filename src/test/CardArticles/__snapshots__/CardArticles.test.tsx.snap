// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test in <CardArticles> component renders correctly 1`] = `
<View>
  <View
    collapsable={false}
    nativeID="animatedComponent"
    style={
      Object {
        "backgroundColor": "white",
        "borderColor": "rgba(0, 0, 0, 0.12)",
        "borderRadius": 8,
        "elevation": 30,
        "marginVertical": 10,
        "overflow": "hidden",
        "shadowColor": "#000000",
        "shadowOffset": Object {
          "height": 29,
          "width": 0,
        },
        "shadowOpacity": 0.24,
        "shadowRadius": 30,
        "width": "100%",
      }
    }
  >
    <View
      accessibilityState={
        Object {
          "disabled": true,
        }
      }
      accessible={true}
      focusable={false}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "flexGrow": 1,
          "flexShrink": 1,
        }
      }
    >
      <View
        style={
          Array [
            Object {
              "backgroundColor": "#eeeeee",
              "height": 195,
              "overflow": "hidden",
            },
            Object {
              "borderTopLeftRadius": 4,
              "borderTopRightRadius": 4,
            },
            Object {
              "width": "100%",
            },
          ]
        }
      >
        <Image
          siblings={
            Array [
              "withTheme(Card.Cover)",
              "Card.Content",
              "Card.Actions",
            ]
          }
          source={
            Object {
              "uri": "",
            }
          }
          style={
            Array [
              Object {
                "flex": 1,
                "height": undefined,
                "justifyContent": "flex-end",
                "padding": 16,
                "width": undefined,
              },
              Object {
                "borderTopLeftRadius": 4,
                "borderTopRightRadius": 4,
              },
            ]
          }
        />
      </View>
      <View
        style={
          Array [
            Object {
              "paddingHorizontal": 16,
            },
            undefined,
            undefined,
          ]
        }
      >
        <View
          style={
            Object {
              "marginBottom": 20,
              "marginTop": 20,
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "display": "flex",
                "flexDirection": "row",
                "justifyContent": "space-between",
                "paddingHorizontal": 5,
              }
            }
          >
            <Text
              style={
                Array [
                  Object {
                    "color": "#000000",
                    "fontFamily": "System",
                    "fontWeight": "400",
                  },
                  Object {
                    "textAlign": "left",
                  },
                  Object {
                    "color": "#A0A0A0",
                    "fontSize": 20,
                  },
                ]
              }
            >
              Invalid date
            </Text>
            <View
              accessible={true}
              collapsable={false}
              focusable={true}
              nativeID="animatedComponent"
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
            >
              <View
                style={
                  Array [
                    Object {
                      "minHeight": 20,
                      "minWidth": 20,
                    },
                    undefined,
                  ]
                }
              >
                <RNSVGSvgView
                  align="xMidYMid"
                  bbHeight={20}
                  bbWidth={20}
                  focusable={false}
                  height={20}
                  meetOrSlice={0}
                  minX={0}
                  minY={0}
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "borderWidth": 0,
                      },
                      Object {
                        "flex": 0,
                        "height": 20,
                        "width": 20,
                      },
                    ]
                  }
                  vbHeight={53.867}
                  vbWidth={53.867}
                  width={20}
                  x="0px"
                  y="0px"
                >
                  <RNSVGGroup>
                    <RNSVGPath
                      d="M26.934 1.318L35.256 18.182 53.867 20.887 40.4 34.013 43.579 52.549 26.934 43.798 10.288 52.549 13.467 34.013 0 20.887 18.611 18.182z"
                      fill={1107296256}
                      propList={
                        Array [
                          "fill",
                        ]
                      }
                    />
                  </RNSVGGroup>
                </RNSVGSvgView>
              </View>
            </View>
          </View>
        </View>
        <Text
          style={
            Array [
              Object {
                "color": "#000000",
                "fontFamily": "System",
                "fontWeight": "400",
              },
              Object {
                "textAlign": "left",
              },
              Array [
                Object {
                  "textAlign": "left",
                },
                Object {
                  "color": "rgba(0, 0, 0, 0.87)",
                  "fontFamily": "System",
                  "fontWeight": "400",
                  "writingDirection": "ltr",
                },
                Array [
                  Object {
                    "fontSize": 14,
                    "letterSpacing": 0.25,
                    "lineHeight": 20,
                    "marginVertical": 2,
                  },
                  Object {
                    "fontSize": 20,
                  },
                ],
              ],
            ]
          }
        >
          Jornada del trabajador
        </Text>
      </View>
      <View
        index={2}
        siblings={
          Array [
            "withTheme(Card.Cover)",
            "Card.Content",
            "Card.Actions",
          ]
        }
        style={
          Array [
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "justifyContent": "flex-start",
              "padding": 8,
            },
            Object {
              "display": "flex",
              "flexDirection": "row",
              "justifyContent": "flex-end",
            },
          ]
        }
        total={3}
      >
        <View
          collapsable={false}
          nativeID="animatedComponent"
          style={
            Object {
              "backgroundColor": "transparent",
              "borderColor": "transparent",
              "borderRadius": 4,
              "borderStyle": "solid",
              "borderWidth": 0,
              "elevation": 0,
              "minWidth": "auto",
            }
          }
        >
          <View
            accessibilityRole="button"
            accessibilityState={
              Object {
                "disabled": false,
              }
            }
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "overflow": "hidden",
                },
                Object {
                  "borderRadius": 4,
                },
              ]
            }
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "justifyContent": "center",
                  },
                  undefined,
                ]
              }
            >
              <Text
                numberOfLines={1}
                selectable={false}
                style={
                  Array [
                    Object {
                      "color": "#000000",
                      "fontFamily": "System",
                      "fontWeight": "400",
                    },
                    Object {
                      "textAlign": "left",
                    },
                    Array [
                      Object {
                        "letterSpacing": 1,
                        "marginHorizontal": 16,
                        "marginVertical": 9,
                        "textAlign": "center",
                      },
                      Object {
                        "marginHorizontal": 8,
                      },
                      Object {
                        "textTransform": "uppercase",
                      },
                      Object {
                        "color": "#6200ee",
                        "fontFamily": "System",
                        "fontWeight": "500",
                      },
                      Object {
                        "fontFamily": "System",
                        "fontWeight": "500",
                      },
                      undefined,
                    ],
                  ]
                }
              >
                Leer más...
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</View>
`;
